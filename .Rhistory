capas.r <- stack(capas.f)
plot(capas.r)
plot(capas.r[[1]]), points(brad.p$lon, brad.p$lat)
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
coordinates(brad.sp) <- ~ lon+lat
brad.sp <- brad.p
coordinates(brad.sp) <- ~ lon+lat
crs(brad.sp) <- crs(wrld_simpl)
install.packages("maptools")
library(dismo); library(raster); library(rgdal); library(maptools)
data("wrld_simpl")
crs(brad.sp) <- crs(wrld_simpl)
data("wrld_simpl"); plot(wrld_simpl)
crs(brad.sp) <- crs(wrld_simpl)
ov <- over(brad.sp, wrld_simpl)
ov
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
buf <- rgeos::gBuffer(brad.sp, byid = T, width = 5)
plot(buf, add = T)
buf <- rgeos::gBuffer(brad.sp, byid = F, width = 5)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
buf <- rgeos::gBuffer(brad.sp, byid = F, width = 10)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
capas.rm <- mask(capas.r, buf)
plot(capas.rm[[1]])
capas.rm <- crop(mask(capas.r, buf), extent(buf))
plot(capas.rm[[1]])
points(brad)
points(brad.sp)
pairs(brad.sp)
pairs(capas.rm)
warnings()
density(brad.sp)
library(MASS)
ncell(capas.rm[[1]])
kde2d(brad.p$lon, brad.p$lat, n = 14720)
dim(capas.rm)
dim(capas.rm[[1]])
dens <- kde2d(brad.p$lon, brad.p$lat, n = 14720)
dens.r <- matrix(dens, ncol = 128, nrow = 115, byrow = T)
class(dens)
dens[[1]]
dens[[2]]
dens.r <- matrix(dens$z, ncol = 128, nrow = 115, byrow = T)
dens.df <- data.frame(x = dens$x, y = dens$y, dens = dens$z)
dens.r <- rasterFromXYZ(dens.df)
range(dens$z)
gc(reset = T)
library(dismo); library(raster); library(rgdal); library(maptools)
brad.f <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
brad.p <- read.csv(brad.f)
brad.sp <- brad.p
coordinates(brad.sp) <- ~ lon+lat
data("wrld_simpl"); plot(wrld_simpl)
crs(brad.sp) <- crs(wrld_simpl)
capas.f <- list.files(path=paste(system.file(package="dismo"), '/ex',
sep=''), pattern='grd', full.names=TRUE )
capas.r <- stack(capas.f)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
buf <- rgeos::gBuffer(brad.sp, byid = F, width = 10)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
capas.rm <- crop(mask(capas.r, buf), extent(buf))
plot(capas.rm[[1]])
points(brad.sp)
pairs(capas.rm)
png("Tutorial-SDM/Pares.png", width = 3000, height = 3000)
pairs(capas.rm)
dev.off()
library(spatstat)
pres.r <- rasterize(brad.sp, capas.rm[[1]], fun = "count")
plot(pres.r)
pres.r[is.na(pres.r[])] <- 0
pres.r[[1]][is.na(pres.r[])] <- 0
pres.r[[1]][is.na(pres.r[[1]][])] <- 0
pres.r <- mask(pres.r[[1]], capas.rm[[1]])
plot(pres.r)
capas.rm <- addLayer(capas.rm, pres.r)
capas.df <- data.frame(rasterToPoints(capas.rm))
names(capas.df)
wt <- 1.0E-6
pesos <- capas.df$ID
wt <- rep(1.0E-6, nrow(capas.df))
wt
capas.df$ID == 0
wt[capas.df$ID == 0] = length(wt)/sum(capas.df$ID == 0)
wt
modelo <- step(glm(pres.r/wt ~ bio1 + bio6 + bio12 + I(bio1^2) + I(bio6^2) + I(bio12^2),
data = capas.df, weights = p.wt,
family = poisson()))
modelo <- step(glm(pres.r/wt ~ bio1 + bio6 + bio12 + I(bio1^2) + I(bio6^2) + I(bio12^2),
data = capas.df, weights = wt,
family = poisson()))
length(wt)
nrow(capas.df)
modelo <- step(glm(ID/wt ~ bio1 + bio6 + bio12 + I(bio1^2) + I(bio6^2) + I(bio12^2),
data = capas.df, weights = wt,
family = poisson()))
pred.modelo <- predict(modelo)
pred.r <- rasterFromXYZ(data.frame(capas.df[, c("x", "y")], pred.r))
pred.r <- rasterFromXYZ(data.frame(capas.df[, c("x", "y")], pred.modelo))
plot(pred.r)
pred.modelo <- exp(predict(modelo))
pred.r <- rasterFromXYZ(data.frame(capas.df[, c("x", "y")], pred.modelo))
plot(pred.r)
fav.pres <- extract(brad.sp, pred.r)
fav.pres <- extract(pred.r, brad.sp)
umbral <- quantile(fav.pres, 0.95)
umbral
plot(fav.pres > fav.pres)
plot(pred.r > fav.pres)
fav.pres
plot(pred.r > umbral)
umbral <- quantile(fav.pres, 0.05)
plot(pred.r > umbral)
points(brad.sp)
plot(pred.r > umbral); points(brad.sp)
plot(pred.r > umbral); points(brad.sp)
plot(pred.r > umbral); points(brad.sp)
paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
brad.f <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
brad.p <- read.csv(brad.f)
head(brad.p)
brad.sp <- brad.p
coordinates(brad.sp) <- ~ lon+lat
library(dismo); library(raster); library(rgdal); library(maptools)
coordinates(brad.sp) <- ~ lon+lat
data("wrld_simpl"); plot(wrld_simpl)
data("wrld_simpl"); plot(wrld_simpl)
crs(brad.sp) <- crs(wrld_simpl)
capas.f <- list.files(path=paste(system.file(package="dismo"), '/ex',
sep=''), pattern='grd', full.names=TRUE )
capas.f
capas.f <- list.files(path=paste(system.file(package="dismo"), '/ex',
sep=''), pattern='grd', full.names=TRUE )
capas.r <- stack(capas.f)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
width = 10
buf <- rgeos::gBuffer(brad.sp, byid = F, width = 10)
plot(buf, add = T)
capas.rm <- crop(mask(capas.r, buf), extent(buf))
plot(capas.rm[[1]])
points(brad.sp)
png("Tutorial-SDM/Pares.png", width = 3000, height = 3000)
pairs(capas.rm)
dev.off()
library(dismo); library(raster); library(rgdal); library(maptools)
############# Preparación de datos
# Puntos de presencia
brad.f <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
brad.p <- read.csv(brad.f)
brad.sp <- brad.p
coordinates(brad.sp) <- ~ lon+lat
data("wrld_simpl"); plot(wrld_simpl)
crs(brad.sp) <- crs(wrld_simpl)
#Capas raster
capas.f <- list.files(path=paste(system.file(package="dismo"), '/ex',
sep=''), pattern='grd', full.names=TRUE )
capas.r <- stack(capas.f)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.sp)
buf <- rgeos::gBuffer(brad.sp, byid = F, width = 10)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
capas.rm <- crop(mask(capas.r, buf), extent(buf))
plot(capas.rm[[1]])
points(brad.sp)
pres.r <- rasterize(brad.sp, capas.rm[[1]], fun = "count")
pres.r
plot(pres.r)
pres.r[[1]][is.na(pres.r[[1]][])] <- 0
pres.r <- mask(pres.r[[1]], capas.rm[[1]])
plot(pres.r)
capas.rm <- addLayer(capas.rm, pres.r)
capas.df <- data.frame(rasterToPoints(capas.rm))
head(capas.df)
nrow(capas.df)
wt <- rep(1.0E-6, nrow(capas.df))
wt
wt[capas.df$ID == 0] = length(wt)/sum(capas.df$ID == 0)
capas.df$ID == 0
wt[capas.df$ID == 0] = length(wt)/sum(capas.df$ID == 0)
modelo <- glm(ID/wt ~ bio1 + bio12 + bio7 + I(bio1^2) + I(bio12^2) + I(bio7^2),
data = capas.df, weights = wt,
family = poisson())
summary(modelo)
modelo.1 <- glm(ID/wt ~ bio1 + bio16 + bio17 + bio7 +
I(bio1^2) + I(bio16^2)+ I(bio17^2) + I(bio7^2),
data = capas.df, weights = wt,
family = poisson())
summary(modelo.1)
AIC(modelo)
AIC(modelo.1)
mod.step <- step(modelo.1)
summary(mod.step)
pred.modelo <- exp(predict(modelo))
pred.modelo
pred.r <- rasterFromXYZ(data.frame(capas.df[, c("x", "y")], pred.modelo))
plot(pred.r)
points(brad.sp)
plot(pred.r)
points(brad.sp, pch = 20, cex = 0.5)
plot(pred.r)
points(brad.sp, pch = 20, cex = 0.1)
fav.pres <- extract(pred.r, brad.sp)
umbral <- quantile(fav.pres, 0.05)
umbral
plot(pred.r > umbral); points(brad.sp)
pred.modelo <- exp(predict(mod.step))
pred.r <- rasterFromXYZ(data.frame(capas.df[, c("x", "y")], pred.modelo))
plot(pred.r)
points(brad.sp, pch = 20, cex = 0.1)
fav.pres <- extract(pred.r, brad.sp)
umbral <- quantile(fav.pres, 0.05)
plot(pred.r > umbral); points(brad.sp)
knitr::opts_chunk$set(dev = 'pdf')
library(terra)
r <- rast(list.files("../Datos-ejemplos/", "tif", full.names = T))
library(raster)
r <- stack(list.files("../Datos-ejemplos/", "tif", full.names = T))
library(terra)
r <- rast(list.files("../Datos-ejemplos/", "tif", full.names = T, recursive = F))
r.df <- data.frame(rasterToPoints(r))
r.df <- as.data.frame(r, xy = T)
knitr::kable(head(r.df), caption = "Primeras seis filas de una conjunto de variables raster tabuladas. Las coordenadas corresponden al centro de cada píxel.")
plot(r[[1]])
plot(r)
pairs(raster)
detach("package:raster", unload = TRUE)
raster
# para una sola capa
r <- rast("../Datos-ejemplos/Var-1.tif")
#Para varias capas alineadas
r <- rast(list.files("../Datos-ejemplos/",
"tif", full.names = T))
pairs(r)
set.seed(19873)
puntos <- coordinates(r)
set.seed(19873)
puntos <- as.data.frame(r, xy = T)[, c("x", "y")]
puntos <- puntos[sample(1:nrow(puntos), 100),]
puntos <- data.frame(puntos)
puntos$x <- puntos$x + runif(100, -0.1, 0.1)
puntos$y <- puntos$y + runif(100, -0.1, 0.1)
var <- extract(r[[2]], puntos)
puntos$mediciones <- var * rnorm(1, 2, 0.1) + rnorm(100, -150, 20)
puntos <- na.omit(puntos)
knitr::kable(head(puntos), caption = "Primeras seis filas de una base de datos de mediciones colectadas en campo.")
head(puntos)
puntos <- as.data.frame(r, xy = T)[, c("x", "y")]
head(puntos)
puntos <- puntos[sample(1:nrow(puntos), 100),]
head(puntos)
class(puntos)
puntos$x <- puntos$x + runif(100, -0.1, 0.1)
puntos$y <- puntos$y + runif(100, -0.1, 0.1)
head(puntos)
var <- extract(r[[2]], puntos)
head(var)
puntos$mediciones <- var$`Var-2` * rnorm(1, 2, 0.1) + rnorm(100, -150, 20)
puntos <- na.omit(puntos)
knitr::kable(head(puntos), caption = "Primeras seis filas de una base de datos de mediciones colectadas en campo.")
head(puntos)
plot(r[[1]])
points(puntos[, c("x", "y")], cex = puntos$mediciones/50)
plot(r[[2]])
points(puntos[, c("x", "y")], cex = puntos$mediciones/50)
plot(r[[3]])
points(puntos[, c("x", "y")], cex = puntos$mediciones/50)
valores.capas <- extract(r, puntos[, c("x", "y")])
puntos <- data.frame(puntos, valores.capas)
knitr::kable(puntos[1:10, ])
with(puntos, plot(mediciones, Var.1, col = "red"))
with(puntos, plot(mediciones, Var.2, col = "red"))
with(puntos, plot(mediciones, Var.3, col = "red"))
cor(puntos[, c("mediciones", "Var.1", "Var.2", "Var.3")])
knitr::opts_chunk$set(echo = TRUE)
library(gstat); library(terra)
puntos <- read.csv("../Datos-ejemplos/Datos-puntos-Moran.csv")
r.0 <- rast("../Datos-ejemplos/Var-1.tif")
datos.sp <- puntos
datos.sp <- vect(puntos)
puntos
datos.sp <- vect(puntos[, c("x", "y")])
names(puntos)
datos.sp <- vect(puntos[, c("Longitud", "Latitud")])
datos.sp <- vect(puntos[, c("Latitud", "Longitud")])
r.0 <- rast("../Datos-ejemplos/Var-1.tif")
datos.sp <- puntos
coordinates(datos.sp) <- ~ Longitud + Latitud
detach("package:terra", unload = TRUE)
library(gstat); library(raster)
puntos <- read.csv("../Datos-ejemplos/Datos-puntos-Moran.csv")
r.0 <- rast("../Datos-ejemplos/Var-1.tif")
r.0 <- raster("../Datos-ejemplos/Var-1.tif")
datos.sp <- puntos
coordinates(datos.sp) <- ~ Longitud + Latitud
proj4string(datos.sp) <- CRS(proj4string(r.0))
new.data <- data.frame(rasterToPoints(r.0))[, 1:2]
names(new.data) <- c("Longitud", "Latitud")
coordinates(new.data) <- ~ Longitud + Latitud
proj4string(new.data) <- CRS(proj4string(r.0))
inv.dist <- idw(formula = Mediciones ~ 1, locations = datos.sp, newdata = new.data)
r.idw <- rasterFromXYZ(data.frame(coordinates(new.data), inv.dist$var1.pred))
#Gráfica
par(mfrow = c(1, 2))
plot(r.idw, main = "Inverso de la distancia")
plot(r.idw)
library(mgcv)
spl <- gam(Mediciones ~ s(Longitud, Latitud, k = 25), data = puntos)
spl.pred <- predict(spl, newdata = data.frame(coordinates(new.data)))
r.spl <- rasterFromXYZ(data.frame(coordinates(new.data), spl.pred))
plot(r.spl, main = "Interpolalción con splines")
points(datos.sp, pch = 20, col = "red", cex = 0.5)
spl.pred <- predict(spl, newdata = data.frame(coordinates(new.data)))
r.spl <- rasterFromXYZ(data.frame(coordinates(new.data), spl.pred))
plot(r.spl, main = "Interpolalción con splines")
points(datos.sp, pch = 20, col = "red", cex = 0.5)
library(dismo); library(terra)
brad.f <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
brad.p <- read.csv(brad.f)
capas.f <- list.files(path=paste(system.file(package="dismo"), '/ex',
sep=''), pattern='grd', full.names=TRUE)
capas.r <- rast(capas.f)
write.csv(brad.sp, "Tutorial-SDM/Bradypus-sp.csv", row.names = F)
write.csv(brad.p, "Tutorial-SDM/Bradypus-sp.csv", row.names = F)
writeRaster(capas.r, "Capas.tif")
brad.p <- read.csv(brad.f)
library(terra)
v <-  vect("Tutorial-SDM/Cuadricula-brad.gpkg")
plot(v)
byn2 <- rep(c(byn, byn1), 15)
byn <- rep(c(1, 0), 14)
byn1 <-  rep(c(0, 1), 14)
byn2 <- rep(c(byn, byn1), 15)
length(byn2)
v$ByN <- byn2
writeVector(v, "Tutorial-SDM/Cuadricula-brad.gpkg")
writeVector(v, "Tutorial-SDM/Cuadricula-brad.gpkg", overwrite = T)
capas <- rast("Tutorial-SDM/Capas.tif")
v <- vect("Tutorial-SDM/Cuadricula-brad-mascara-0.gpkg")
caás.0 <- mask(capas, v)
capas.0 <- mask(capas, v)
plot(capas.0)
capas.0 <- mask(capas, v, touches = F)
plot(capas.0)
plot(capas.0[[1]])
v <- vect("Tutorial-SDM/Cuadricula-brad-mascara-1.gpkg")
capas.0 <- mask(capas, v, touches = F)
plot(capas.0[[1]])
v <- vect("Tutorial-SDM/Cuadricula-brad-mascara-0.gpkg")
library(terra)
v <- vect("Tutorial-SDM/Cuadricula-brad-mascara-0.gpkg")
brad.p <- read.csv("Bradypus-sp.csv")
setwd("~/Documentos/Cosas ENES/Materias/AME/Analisis-Modelado-Esp-presentaciones/Tutorial-SDM")
v <- vect("Cuadricula-brad-mascara-0.gpkg")
brad.p <- read.csv("Bradypus-sp.csv")
brad.sp <- vect(brad.p[, c("lon", "lat")])
capas.r <- rast("Capas.tif")
capas.r <- scale(capas.r)
capas.m <- mask(capas.r, v, touching = T)
capas.m <- mask(capas.r, v)
capas.m <- mask(capas.r, v, touches = T)
plot(capas.m[[1]]); points(brad.sp)
nas <- extract(brad.sp, capas.m)
nas <- extract(capas.m, brad.sp)
nas <- extract(capas.m[[1]], brad.sp)
nas
brad.p <- na.omit(brad.p)
brad.p
brad.p$nas <- nas$bio1
brad.p <- na.omit(brad.p)
brad.p
source("imFromStack.R")
source("winFromRaster.R")
source("plotQuantIntens.R")
capas.im <- imFromStack(capas.m)
w <- as.owin(capas.im[[1]])
brad.ppp <- ppp(x = brad.p$lon, y = brad.p$lat, window = w, check = F)
plot(capas.im[[1]]); points(brad.ppp, col = "green", pch = 20, cex = 0.5)
modelo <- readRDS("Tutorial-SDM/Modelo-ppm.rds")
modelo <- readRDS("Modelo-ppm.rds")
formula(modelo)
capas.m[1]
capas.[[m]]
capas.m[[1]]
nas
plot(capas.im[[1]]); points(brad.ppp, col = "green", pch = 20, cex = 0.5)
formula(modelo)
mod.val <- ppm(brad.ppp ~ bio17 + bio16 + bio7 + I(bio1^2),
covariates = capas.im)
capas.1 <- rast("Capas.tif")
capas.1 <- scale(capas.1)
buf <- buffer(brad.sp, width = 10)
capas.im1 <- imFromStack(capas.1)
plot(capas.im1[[1]])
capas.1 <- mask(capas.1, buf)
capas.im1 <- imFromStack(capas.1)
plot(capas.im1[[1]])
w2 <- as.owin(capas.im1[[1]])
mod.val.pred <- predict(mod.val, covariates = capas.im1, window = w2)
plot(mod.val.pred)
dim(capas.1[[1]])
mod.val.pred <- predict(mod.val, covariates = capas.im1,
window = w2, dimyx = c(186, 192))
plot(mod.val.pred)
pred.val.r <- rast(mod.val.pred)
v1 <- vect("Cuadricula-brad-mascara-1.gpkg")
nas1 <- extract(brad.sp, v1)
nas1
capas.1v1 <- mask(capas.1, v1)
nas1 <- extract(capas.1v1, brad.sp)
nas1
brad.1 <- as.data.frame(brad.sp)
brad.1 <- as.data.frame(brad.sp)
brad.1$nas <- nas1
brad.1 <- na.omit(brad.1)
v1 <- vect("Cuadricula-brad-mascara-1.gpkg")
capas.1v1 <- mask(capas.1, v1)
nas1 <- extract(capas.1v1[[1]], brad.sp)
brad.1 <- as.data.frame(brad.sp)
brad.1$nas <- nas1$bio1
brad.1 <- na.omit(brad.1)
brad.1
capas.1v1 <- mask(capas.1, v1)
nas1 <- extract(capas.1v1[[1]], brad.sp)
nas1
brad.1 <- as.data.frame(brad.sp)
brad.1
brad.1 <- as.data.frame(brad.sp, xy = T)
as.data.frame(brad.sp, xy = T)
brad.1 <- read.csv("Bradypus-sp.csv")
brad.1 <- read.csv("Bradypus-sp.csv")[, -1]
capas.1v1 <- mask(capas.1, v1)
nas1 <- extract(capas.1v1[[1]], brad.1)
nas1
brad.1$nas <- nas1$bio1
brad.1 <- na.omit(brad.1)
brad.1
plot(pred.val.r); points(brad.1)
global(pred.val.r, range)
global(pred.val.r, range, na.rm = T)
umbrales <- seq(0, 6.5, len = 25)
umbrales
umbrales.r <- pred.val.r > umbrales
plot(umrales.r)
plot(umbrales.r)
umbrales <- seq(0, 2, len = 25)
umbrales.r <- pred.val.r > umbrales
plot(umbrales.r)
umbrales <- seq(0, 1, len = 25)
umbrales.r <- pred.val.r > umbrales
plot(umbrales.r)
umbrales <- seq(0, 0.5, len = 25)
umbrales.r <- pred.val.r > umbrales
plot(umbrales.r)
umbrales <- seq(0, 0.25, len = 25)
umbrales.r <- pred.val.r > umbrales
plot(umbrales.r)
valid.umb <- extract(umbrales.r, brad.1)
brad.1
valid.umb <- extract(umbrales.r, brad.1[, 1:2])
valid.umb
medias <- colMeans(valid.umb)
medias
area <- global(umbrales.r, mean)
area
area <- global(umbrales.r, mean, na.rm = T)
area
plot(area, medias)
plot(area$mean, medias)
plot(area$mean, medias[-1])
library(terra)
brad.p <- read.csv("Bradypus-sp.csv")
setwd("~/Documentos/Cosas ENES/Materias/AME/Analisis-Modelado-Esp-presentaciones/Tutorial-SDM")
brad.p <- read.csv("Bradypus-sp.csv")
brad.sp <- vect(brad.p[, c("lon", "lat")])
capas.r <- rast("Capas.tif")
capas.r <- scale(capas.r)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.sp)
buf <- buffer(brad.sp, width = 10)
par(mar = c(1,1,1,1))
plot(capas.r[[1]]); points(brad.p$lon, brad.p$lat)
plot(buf, add = T)
capas.rm <- mask(capas.r, buf)
plot(capas.rm[[1]])
points(brad.sp)
dir.create("Tutorial-SDM")
png("Tutorial-SDM/Pares.png", width = 3000, height = 3000)
pairs(capas.rm)
dev.off()
source("imFromStack.R")
source("winFromRaster.R")
source("plotQuantIntens.R")
capas.im <- imFromStack(capas.rm)
install.packages("spatstat")
